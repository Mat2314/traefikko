version: "3"
   
services:
  traefik:
    image: traefik:v2.0
    container_name: traefik
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - traefik-network
    volumes:
      - "$PWD/docker/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: postgres
    volumes:
      - ./postgres_data/db:/var/lib/postgresql/data
    networks:
      - traefik-network
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  api:
    build: 
        dockerfile: Django.Dockerfile
        context: .
    volumes:
      - ./api:/code
#    ports:
#      - "8000:8000"
    networks:
      - traefik-network
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${API_HOST}`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - traefik.docker.network=traefik-network

  frontend:
    build:
      dockerfile: Frontend.Dockerfile
      context: .
#    ports:
#      - "8123:80"
    networks:
      - traefik-network
    depends_on:
      - api
    volumes:
      - ./frontend/dist/:/usr/share/nginx/html/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - traefik.docker.network=traefik-network

networks:
  traefik-network: