version: "3"
   
services:
  db:
    image: postgres
    volumes:
      - ./postgres_data/db:/var/lib/postgresql/data
    networks:
      - private
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  api:
    build: 
        dockerfile: Django.Dockerfile
        context: .
    volumes:
      - ./api:/code
    networks:
      - traefik_webgateway
      - private
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${API_HOST}`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik_webgateway"

  frontend:
    build:
      dockerfile: Frontend.Dockerfile
      context: .
    networks:
      - traefik_webgateway
      - private
    depends_on:
      - api
    volumes:
      - ./frontend/dist/:/usr/share/nginx/html/
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_webgateway"

  staticfiles:
    build:
      dockerfile: Staticfiles.Dockerfile
      context: .
    networks:
      - traefik_webgateway
      - private
    depends_on:
      - api
    restart: on-failure
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.staticfiles.rule=Host(`${STATICFILES_HOST}`)"
        - "traefik.http.routers.staticfiles.entrypoints=web"
        - "traefik.http.services.staticfiles.loadbalancer.server.port=80"
        - "traefik.docker.network=traefik_webgateway"

networks:
  private:
  traefik_webgateway:
    external: true
